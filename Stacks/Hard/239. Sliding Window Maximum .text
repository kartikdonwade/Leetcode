class Solution {
public:
/*
Heare a dequeue will be kept
we will pop from front if number gets out of range (index).
and element at i index will get added in dequeue only if last element present in dequeue is greater than incoming one.
*/
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
       deque <int> dq;
       vector <int > ans;
       for(int i =0;i<nums.size();i++){
        if(!dq.empty() && dq.front()==i-k)dq.pop_front();
        while(!dq.empty() && nums[dq.back()]<=nums[i])dq.pop_back();
        dq.push_back(i);
        if(i>=k-1)ans.push_back(nums[dq.front()]);
       }
       return ans;
    }
};